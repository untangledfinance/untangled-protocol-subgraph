// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BackerRewardsClaimed extends ethereum.Event {
  get params(): BackerRewardsClaimed__Params {
    return new BackerRewardsClaimed__Params(this);
  }
}

export class BackerRewardsClaimed__Params {
  _event: BackerRewardsClaimed;

  constructor(event: BackerRewardsClaimed) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BackerRewardsClaimed1 extends ethereum.Event {
  get params(): BackerRewardsClaimed1__Params {
    return new BackerRewardsClaimed1__Params(this);
  }
}

export class BackerRewardsClaimed1__Params {
  _event: BackerRewardsClaimed1;

  constructor(event: BackerRewardsClaimed1) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountOfTranchedPoolRewards(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountOfSeniorPoolRewards(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BackerRewardsSetMaxInterestDollarsEligible extends ethereum.Event {
  get params(): BackerRewardsSetMaxInterestDollarsEligible__Params {
    return new BackerRewardsSetMaxInterestDollarsEligible__Params(this);
  }
}

export class BackerRewardsSetMaxInterestDollarsEligible__Params {
  _event: BackerRewardsSetMaxInterestDollarsEligible;

  constructor(event: BackerRewardsSetMaxInterestDollarsEligible) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get maxInterestDollarsEligible(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BackerRewardsSetTotalInterestReceived extends ethereum.Event {
  get params(): BackerRewardsSetTotalInterestReceived__Params {
    return new BackerRewardsSetTotalInterestReceived__Params(this);
  }
}

export class BackerRewardsSetTotalInterestReceived__Params {
  _event: BackerRewardsSetTotalInterestReceived;

  constructor(event: BackerRewardsSetTotalInterestReceived) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get totalInterestReceived(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BackerRewardsSetTotalRewards extends ethereum.Event {
  get params(): BackerRewardsSetTotalRewards__Params {
    return new BackerRewardsSetTotalRewards__Params(this);
  }
}

export class BackerRewardsSetTotalRewards__Params {
  _event: BackerRewardsSetTotalRewards;

  constructor(event: BackerRewardsSetTotalRewards) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get totalRewards(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalRewardPercentOfTotalGFI(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SafetyCheckTriggered extends ethereum.Event {
  get params(): SafetyCheckTriggered__Params {
    return new SafetyCheckTriggered__Params(this);
  }
}

export class SafetyCheckTriggered__Params {
  _event: SafetyCheckTriggered;

  constructor(event: SafetyCheckTriggered) {
    this._event = event;
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyImplementationUpdated extends ethereum.Event {
  get params(): ProxyImplementationUpdated__Params {
    return new ProxyImplementationUpdated__Params(this);
  }
}

export class ProxyImplementationUpdated__Params {
  _event: ProxyImplementationUpdated;

  constructor(event: ProxyImplementationUpdated) {
    this._event = event;
  }

  get previousImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BackerRewards__poolStakingRewardsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAccumulatedRewardsPerTokenAtLastCheckpoint(): BigInt {
    return this.value0;
  }

  getLastUpdateTime(): BigInt {
    return this.value1;
  }
}

export class BackerRewards__tokensResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getRewardsClaimed(): BigInt {
    return this.value0;
  }

  getAccRewardsPerPrincipalDollarAtMint(): BigInt {
    return this.value1;
  }
}

export class BackerRewards extends ethereum.SmartContract {
  static bind(address: Address): BackerRewards {
    return new BackerRewards("BackerRewards", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  config(): Address {
    let result = super.call("config", "config():(address)", []);

    return result[0].toAddress();
  }

  try_config(): ethereum.CallResult<Address> {
    let result = super.tryCall("config", "config():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAdmin(): boolean {
    let result = super.call("isAdmin", "isAdmin():(bool)", []);

    return result[0].toBoolean();
  }

  try_isAdmin(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxInterestDollarsEligible(): BigInt {
    let result = super.call(
      "maxInterestDollarsEligible",
      "maxInterestDollarsEligible():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxInterestDollarsEligible(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxInterestDollarsEligible",
      "maxInterestDollarsEligible():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  poolStakingRewards(param0: Address): BackerRewards__poolStakingRewardsResult {
    let result = super.call(
      "poolStakingRewards",
      "poolStakingRewards(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new BackerRewards__poolStakingRewardsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_poolStakingRewards(
    param0: Address
  ): ethereum.CallResult<BackerRewards__poolStakingRewardsResult> {
    let result = super.tryCall(
      "poolStakingRewards",
      "poolStakingRewards(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BackerRewards__poolStakingRewardsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  poolTokenClaimableRewards(tokenId: BigInt): BigInt {
    let result = super.call(
      "poolTokenClaimableRewards",
      "poolTokenClaimableRewards(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_poolTokenClaimableRewards(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolTokenClaimableRewards",
      "poolTokenClaimableRewards(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pools(param0: Address): BigInt {
    let result = super.call("pools", "pools(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_pools(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("pools", "pools(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stakingRewardsClaimed(tokenId: BigInt): BigInt {
    let result = super.call(
      "stakingRewardsClaimed",
      "stakingRewardsClaimed(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_stakingRewardsClaimed(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "stakingRewardsClaimed",
      "stakingRewardsClaimed(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stakingRewardsEarnedSinceLastWithdraw(tokenId: BigInt): BigInt {
    let result = super.call(
      "stakingRewardsEarnedSinceLastWithdraw",
      "stakingRewardsEarnedSinceLastWithdraw(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_stakingRewardsEarnedSinceLastWithdraw(
    tokenId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "stakingRewardsEarnedSinceLastWithdraw",
      "stakingRewardsEarnedSinceLastWithdraw(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenStakingRewards(param0: BigInt): BigInt {
    let result = super.call(
      "tokenStakingRewards",
      "tokenStakingRewards(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_tokenStakingRewards(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenStakingRewards",
      "tokenStakingRewards(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokens(param0: BigInt): BackerRewards__tokensResult {
    let result = super.call("tokens", "tokens(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new BackerRewards__tokensResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_tokens(param0: BigInt): ethereum.CallResult<BackerRewards__tokensResult> {
    let result = super.tryCall("tokens", "tokens(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BackerRewards__tokensResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  totalInterestReceived(): BigInt {
    let result = super.call(
      "totalInterestReceived",
      "totalInterestReceived():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalInterestReceived(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalInterestReceived",
      "totalInterestReceived():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalRewardPercentOfTotalGFI(): BigInt {
    let result = super.call(
      "totalRewardPercentOfTotalGFI",
      "totalRewardPercentOfTotalGFI():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalRewardPercentOfTotalGFI(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalRewardPercentOfTotalGFI",
      "totalRewardPercentOfTotalGFI():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalRewards(): BigInt {
    let result = super.call("totalRewards", "totalRewards():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalRewards(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalRewards", "totalRewards():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(id: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(id: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class __BaseUpgradeablePausable__initCall extends ethereum.Call {
  get inputs(): __BaseUpgradeablePausable__initCall__Inputs {
    return new __BaseUpgradeablePausable__initCall__Inputs(this);
  }

  get outputs(): __BaseUpgradeablePausable__initCall__Outputs {
    return new __BaseUpgradeablePausable__initCall__Outputs(this);
  }
}

export class __BaseUpgradeablePausable__initCall__Inputs {
  _call: __BaseUpgradeablePausable__initCall;

  constructor(call: __BaseUpgradeablePausable__initCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class __BaseUpgradeablePausable__initCall__Outputs {
  _call: __BaseUpgradeablePausable__initCall;

  constructor(call: __BaseUpgradeablePausable__initCall) {
    this._call = call;
  }
}

export class __PauserPausable__initCall extends ethereum.Call {
  get inputs(): __PauserPausable__initCall__Inputs {
    return new __PauserPausable__initCall__Inputs(this);
  }

  get outputs(): __PauserPausable__initCall__Outputs {
    return new __PauserPausable__initCall__Outputs(this);
  }
}

export class __PauserPausable__initCall__Inputs {
  _call: __PauserPausable__initCall;

  constructor(call: __PauserPausable__initCall) {
    this._call = call;
  }
}

export class __PauserPausable__initCall__Outputs {
  _call: __PauserPausable__initCall;

  constructor(call: __PauserPausable__initCall) {
    this._call = call;
  }
}

export class __initialize__Call extends ethereum.Call {
  get inputs(): __initialize__Call__Inputs {
    return new __initialize__Call__Inputs(this);
  }

  get outputs(): __initialize__Call__Outputs {
    return new __initialize__Call__Outputs(this);
  }
}

export class __initialize__Call__Inputs {
  _call: __initialize__Call;

  constructor(call: __initialize__Call) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _config(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class __initialize__Call__Outputs {
  _call: __initialize__Call;

  constructor(call: __initialize__Call) {
    this._call = call;
  }
}

export class AllocateRewardsCall extends ethereum.Call {
  get inputs(): AllocateRewardsCall__Inputs {
    return new AllocateRewardsCall__Inputs(this);
  }

  get outputs(): AllocateRewardsCall__Outputs {
    return new AllocateRewardsCall__Outputs(this);
  }
}

export class AllocateRewardsCall__Inputs {
  _call: AllocateRewardsCall;

  constructor(call: AllocateRewardsCall) {
    this._call = call;
  }

  get _interestPaymentAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AllocateRewardsCall__Outputs {
  _call: AllocateRewardsCall;

  constructor(call: AllocateRewardsCall) {
    this._call = call;
  }
}

export class ForceInitializeStakingRewardsPoolInfoCall extends ethereum.Call {
  get inputs(): ForceInitializeStakingRewardsPoolInfoCall__Inputs {
    return new ForceInitializeStakingRewardsPoolInfoCall__Inputs(this);
  }

  get outputs(): ForceInitializeStakingRewardsPoolInfoCall__Outputs {
    return new ForceInitializeStakingRewardsPoolInfoCall__Outputs(this);
  }
}

export class ForceInitializeStakingRewardsPoolInfoCall__Inputs {
  _call: ForceInitializeStakingRewardsPoolInfoCall;

  constructor(call: ForceInitializeStakingRewardsPoolInfoCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fiduSharePriceAtDrawdown(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get principalDeployedAtDrawdown(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get rewardsAccumulatorAtDrawdown(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ForceInitializeStakingRewardsPoolInfoCall__Outputs {
  _call: ForceInitializeStakingRewardsPoolInfoCall;

  constructor(call: ForceInitializeStakingRewardsPoolInfoCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class OnTranchedPoolDrawdownCall extends ethereum.Call {
  get inputs(): OnTranchedPoolDrawdownCall__Inputs {
    return new OnTranchedPoolDrawdownCall__Inputs(this);
  }

  get outputs(): OnTranchedPoolDrawdownCall__Outputs {
    return new OnTranchedPoolDrawdownCall__Outputs(this);
  }
}

export class OnTranchedPoolDrawdownCall__Inputs {
  _call: OnTranchedPoolDrawdownCall;

  constructor(call: OnTranchedPoolDrawdownCall) {
    this._call = call;
  }

  get sliceIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OnTranchedPoolDrawdownCall__Outputs {
  _call: OnTranchedPoolDrawdownCall;

  constructor(call: OnTranchedPoolDrawdownCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetMaxInterestDollarsEligibleCall extends ethereum.Call {
  get inputs(): SetMaxInterestDollarsEligibleCall__Inputs {
    return new SetMaxInterestDollarsEligibleCall__Inputs(this);
  }

  get outputs(): SetMaxInterestDollarsEligibleCall__Outputs {
    return new SetMaxInterestDollarsEligibleCall__Outputs(this);
  }
}

export class SetMaxInterestDollarsEligibleCall__Inputs {
  _call: SetMaxInterestDollarsEligibleCall;

  constructor(call: SetMaxInterestDollarsEligibleCall) {
    this._call = call;
  }

  get _maxInterestDollarsEligible(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxInterestDollarsEligibleCall__Outputs {
  _call: SetMaxInterestDollarsEligibleCall;

  constructor(call: SetMaxInterestDollarsEligibleCall) {
    this._call = call;
  }
}

export class SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall extends ethereum.Call {
  get inputs(): SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall__Inputs {
    return new SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall__Inputs(this);
  }

  get outputs(): SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall__Outputs {
    return new SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall__Outputs(
      this
    );
  }
}

export class SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall__Inputs {
  _call: SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall;

  constructor(call: SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall) {
    this._call = call;
  }

  get poolAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall__Outputs {
  _call: SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall;

  constructor(call: SetPoolTokenAccRewardsPerPrincipalDollarAtMintCall) {
    this._call = call;
  }
}

export class SetTotalInterestReceivedCall extends ethereum.Call {
  get inputs(): SetTotalInterestReceivedCall__Inputs {
    return new SetTotalInterestReceivedCall__Inputs(this);
  }

  get outputs(): SetTotalInterestReceivedCall__Outputs {
    return new SetTotalInterestReceivedCall__Outputs(this);
  }
}

export class SetTotalInterestReceivedCall__Inputs {
  _call: SetTotalInterestReceivedCall;

  constructor(call: SetTotalInterestReceivedCall) {
    this._call = call;
  }

  get _totalInterestReceived(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTotalInterestReceivedCall__Outputs {
  _call: SetTotalInterestReceivedCall;

  constructor(call: SetTotalInterestReceivedCall) {
    this._call = call;
  }
}

export class SetTotalRewardsCall extends ethereum.Call {
  get inputs(): SetTotalRewardsCall__Inputs {
    return new SetTotalRewardsCall__Inputs(this);
  }

  get outputs(): SetTotalRewardsCall__Outputs {
    return new SetTotalRewardsCall__Outputs(this);
  }
}

export class SetTotalRewardsCall__Inputs {
  _call: SetTotalRewardsCall;

  constructor(call: SetTotalRewardsCall) {
    this._call = call;
  }

  get _totalRewards(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTotalRewardsCall__Outputs {
  _call: SetTotalRewardsCall;

  constructor(call: SetTotalRewardsCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawMultipleCall extends ethereum.Call {
  get inputs(): WithdrawMultipleCall__Inputs {
    return new WithdrawMultipleCall__Inputs(this);
  }

  get outputs(): WithdrawMultipleCall__Outputs {
    return new WithdrawMultipleCall__Outputs(this);
  }
}

export class WithdrawMultipleCall__Inputs {
  _call: WithdrawMultipleCall;

  constructor(call: WithdrawMultipleCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class WithdrawMultipleCall__Outputs {
  _call: WithdrawMultipleCall;

  constructor(call: WithdrawMultipleCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get implementationAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ownerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TokenExchange extends ethereum.Event {
  get params(): TokenExchange__Params {
    return new TokenExchange__Params(this);
  }
}

export class TokenExchange__Params {
  _event: TokenExchange;

  constructor(event: TokenExchange) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sold_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokens_sold(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get bought_id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokens_bought(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class AddLiquidity extends ethereum.Event {
  get params(): AddLiquidity__Params {
    return new AddLiquidity__Params(this);
  }
}

export class AddLiquidity__Params {
  _event: AddLiquidity;

  constructor(event: AddLiquidity) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token_amounts(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get token_supply(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RemoveLiquidity extends ethereum.Event {
  get params(): RemoveLiquidity__Params {
    return new RemoveLiquidity__Params(this);
  }
}

export class RemoveLiquidity__Params {
  _event: RemoveLiquidity;

  constructor(event: RemoveLiquidity) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token_amounts(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get token_supply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RemoveLiquidityOne extends ethereum.Event {
  get params(): RemoveLiquidityOne__Params {
    return new RemoveLiquidityOne__Params(this);
  }
}

export class RemoveLiquidityOne__Params {
  _event: RemoveLiquidityOne;

  constructor(event: RemoveLiquidityOne) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token_amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get coin_index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get coin_amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CommitNewParameters extends ethereum.Event {
  get params(): CommitNewParameters__Params {
    return new CommitNewParameters__Params(this);
  }
}

export class CommitNewParameters__Params {
  _event: CommitNewParameters;

  constructor(event: CommitNewParameters) {
    this._event = event;
  }

  get deadline(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get admin_fee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mid_fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get out_fee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee_gamma(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get allowed_extra_profit(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get adjustment_step(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get ma_half_time(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class NewParameters extends ethereum.Event {
  get params(): NewParameters__Params {
    return new NewParameters__Params(this);
  }
}

export class NewParameters__Params {
  _event: NewParameters;

  constructor(event: NewParameters) {
    this._event = event;
  }

  get admin_fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get mid_fee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get out_fee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fee_gamma(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get allowed_extra_profit(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get adjustment_step(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get ma_half_time(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RampAgamma extends ethereum.Event {
  get params(): RampAgamma__Params {
    return new RampAgamma__Params(this);
  }
}

export class RampAgamma__Params {
  _event: RampAgamma;

  constructor(event: RampAgamma) {
    this._event = event;
  }

  get initial_A(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get future_A(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get initial_gamma(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get future_gamma(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get initial_time(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get future_time(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class StopRampA extends ethereum.Event {
  get params(): StopRampA__Params {
    return new StopRampA__Params(this);
  }
}

export class StopRampA__Params {
  _event: StopRampA;

  constructor(event: StopRampA) {
    this._event = event;
  }

  get current_A(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get current_gamma(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get time(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ClaimAdminFee extends ethereum.Event {
  get params(): ClaimAdminFee__Params {
    return new ClaimAdminFee__Params(this);
  }
}

export class ClaimAdminFee__Params {
  _event: ClaimAdminFee;

  constructor(event: ClaimAdminFee) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokens(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CurveFiduUSDC extends ethereum.SmartContract {
  static bind(address: Address): CurveFiduUSDC {
    return new CurveFiduUSDC("CurveFiduUSDC", address);
  }

  remove_liquidity_one_coin(
    token_amount: BigInt,
    i: BigInt,
    min_amount: BigInt
  ): BigInt {
    let result = super.call(
      "remove_liquidity_one_coin",
      "remove_liquidity_one_coin(uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(min_amount)
      ]
    );

    return result[0].toBigInt();
  }

  try_remove_liquidity_one_coin(
    token_amount: BigInt,
    i: BigInt,
    min_amount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "remove_liquidity_one_coin",
      "remove_liquidity_one_coin(uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(min_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  remove_liquidity_one_coin1(
    token_amount: BigInt,
    i: BigInt,
    min_amount: BigInt,
    use_eth: boolean
  ): BigInt {
    let result = super.call(
      "remove_liquidity_one_coin",
      "remove_liquidity_one_coin(uint256,uint256,uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(min_amount),
        ethereum.Value.fromBoolean(use_eth)
      ]
    );

    return result[0].toBigInt();
  }

  try_remove_liquidity_one_coin1(
    token_amount: BigInt,
    i: BigInt,
    min_amount: BigInt,
    use_eth: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "remove_liquidity_one_coin",
      "remove_liquidity_one_coin(uint256,uint256,uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(min_amount),
        ethereum.Value.fromBoolean(use_eth)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  remove_liquidity_one_coin2(
    token_amount: BigInt,
    i: BigInt,
    min_amount: BigInt,
    use_eth: boolean,
    receiver: Address
  ): BigInt {
    let result = super.call(
      "remove_liquidity_one_coin",
      "remove_liquidity_one_coin(uint256,uint256,uint256,bool,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(min_amount),
        ethereum.Value.fromBoolean(use_eth),
        ethereum.Value.fromAddress(receiver)
      ]
    );

    return result[0].toBigInt();
  }

  try_remove_liquidity_one_coin2(
    token_amount: BigInt,
    i: BigInt,
    min_amount: BigInt,
    use_eth: boolean,
    receiver: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "remove_liquidity_one_coin",
      "remove_liquidity_one_coin(uint256,uint256,uint256,bool,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(min_amount),
        ethereum.Value.fromBoolean(use_eth),
        ethereum.Value.fromAddress(receiver)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  get_dy(i: BigInt, j: BigInt, dx: BigInt): BigInt {
    let result = super.call(
      "get_dy",
      "get_dy(uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(j),
        ethereum.Value.fromUnsignedBigInt(dx)
      ]
    );

    return result[0].toBigInt();
  }

  try_get_dy(i: BigInt, j: BigInt, dx: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "get_dy",
      "get_dy(uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(i),
        ethereum.Value.fromUnsignedBigInt(j),
        ethereum.Value.fromUnsignedBigInt(dx)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calc_token_amount(amounts: Array<BigInt>): BigInt {
    let result = super.call(
      "calc_token_amount",
      "calc_token_amount(uint256[2]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(amounts)]
    );

    return result[0].toBigInt();
  }

  try_calc_token_amount(amounts: Array<BigInt>): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calc_token_amount",
      "calc_token_amount(uint256[2]):(uint256)",
      [ethereum.Value.fromUnsignedBigIntArray(amounts)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calc_withdraw_one_coin(token_amount: BigInt, i: BigInt): BigInt {
    let result = super.call(
      "calc_withdraw_one_coin",
      "calc_withdraw_one_coin(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i)
      ]
    );

    return result[0].toBigInt();
  }

  try_calc_withdraw_one_coin(
    token_amount: BigInt,
    i: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calc_withdraw_one_coin",
      "calc_withdraw_one_coin(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(token_amount),
        ethereum.Value.fromUnsignedBigInt(i)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lp_price(): BigInt {
    let result = super.call("lp_price", "lp_price():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lp_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lp_price", "lp_price():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  A(): BigInt {
    let result = super.call("A", "A():(uint256)", []);

    return result[0].toBigInt();
  }

  try_A(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("A", "A():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gamma(): BigInt {
    let result = super.call("gamma", "gamma():(uint256)", []);

    return result[0].toBigInt();
  }

  try_gamma(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gamma", "gamma():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  get_virtual_price(): BigInt {
    let result = super.call(
      "get_virtual_price",
      "get_virtual_price():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_get_virtual_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "get_virtual_price",
      "get_virtual_price():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  price_oracle(): BigInt {
    let result = super.call("price_oracle", "price_oracle():(uint256)", []);

    return result[0].toBigInt();
  }

  try_price_oracle(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("price_oracle", "price_oracle():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  coins(arg0: BigInt): Address {
    let result = super.call("coins", "coins(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);

    return result[0].toAddress();
  }

  try_coins(arg0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("coins", "coins(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  price_scale(): BigInt {
    let result = super.call("price_scale", "price_scale():(uint256)", []);

    return result[0].toBigInt();
  }

  try_price_scale(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("price_scale", "price_scale():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  last_prices(): BigInt {
    let result = super.call("last_prices", "last_prices():(uint256)", []);

    return result[0].toBigInt();
  }

  try_last_prices(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("last_prices", "last_prices():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  last_prices_timestamp(): BigInt {
    let result = super.call(
      "last_prices_timestamp",
      "last_prices_timestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_last_prices_timestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "last_prices_timestamp",
      "last_prices_timestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  initial_A_gamma(): BigInt {
    let result = super.call(
      "initial_A_gamma",
      "initial_A_gamma():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_initial_A_gamma(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "initial_A_gamma",
      "initial_A_gamma():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_A_gamma(): BigInt {
    let result = super.call("future_A_gamma", "future_A_gamma():(uint256)", []);

    return result[0].toBigInt();
  }

  try_future_A_gamma(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_A_gamma",
      "future_A_gamma():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  initial_A_gamma_time(): BigInt {
    let result = super.call(
      "initial_A_gamma_time",
      "initial_A_gamma_time():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_initial_A_gamma_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "initial_A_gamma_time",
      "initial_A_gamma_time():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_A_gamma_time(): BigInt {
    let result = super.call(
      "future_A_gamma_time",
      "future_A_gamma_time():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_future_A_gamma_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_A_gamma_time",
      "future_A_gamma_time():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allowed_extra_profit(): BigInt {
    let result = super.call(
      "allowed_extra_profit",
      "allowed_extra_profit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_allowed_extra_profit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowed_extra_profit",
      "allowed_extra_profit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_allowed_extra_profit(): BigInt {
    let result = super.call(
      "future_allowed_extra_profit",
      "future_allowed_extra_profit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_future_allowed_extra_profit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_allowed_extra_profit",
      "future_allowed_extra_profit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fee_gamma(): BigInt {
    let result = super.call("fee_gamma", "fee_gamma():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee_gamma(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee_gamma", "fee_gamma():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_fee_gamma(): BigInt {
    let result = super.call(
      "future_fee_gamma",
      "future_fee_gamma():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_future_fee_gamma(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_fee_gamma",
      "future_fee_gamma():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  adjustment_step(): BigInt {
    let result = super.call(
      "adjustment_step",
      "adjustment_step():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_adjustment_step(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "adjustment_step",
      "adjustment_step():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_adjustment_step(): BigInt {
    let result = super.call(
      "future_adjustment_step",
      "future_adjustment_step():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_future_adjustment_step(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_adjustment_step",
      "future_adjustment_step():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ma_half_time(): BigInt {
    let result = super.call("ma_half_time", "ma_half_time():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ma_half_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ma_half_time", "ma_half_time():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_ma_half_time(): BigInt {
    let result = super.call(
      "future_ma_half_time",
      "future_ma_half_time():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_future_ma_half_time(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_ma_half_time",
      "future_ma_half_time():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mid_fee(): BigInt {
    let result = super.call("mid_fee", "mid_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mid_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mid_fee", "mid_fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  out_fee(): BigInt {
    let result = super.call("out_fee", "out_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_out_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("out_fee", "out_fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin_fee(): BigInt {
    let result = super.call("admin_fee", "admin_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_admin_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("admin_fee", "admin_fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_mid_fee(): BigInt {
    let result = super.call("future_mid_fee", "future_mid_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_future_mid_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_mid_fee",
      "future_mid_fee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_out_fee(): BigInt {
    let result = super.call("future_out_fee", "future_out_fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_future_out_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_out_fee",
      "future_out_fee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  future_admin_fee(): BigInt {
    let result = super.call(
      "future_admin_fee",
      "future_admin_fee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_future_admin_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "future_admin_fee",
      "future_admin_fee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balances(arg0: BigInt): BigInt {
    let result = super.call("balances", "balances(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);

    return result[0].toBigInt();
  }

  try_balances(arg0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balances", "balances(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  D(): BigInt {
    let result = super.call("D", "D():(uint256)", []);

    return result[0].toBigInt();
  }

  try_D(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("D", "D():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  xcp_profit(): BigInt {
    let result = super.call("xcp_profit", "xcp_profit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_xcp_profit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("xcp_profit", "xcp_profit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  xcp_profit_a(): BigInt {
    let result = super.call("xcp_profit_a", "xcp_profit_a():(uint256)", []);

    return result[0].toBigInt();
  }

  try_xcp_profit_a(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("xcp_profit_a", "xcp_profit_a():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  virtual_price(): BigInt {
    let result = super.call("virtual_price", "virtual_price():(uint256)", []);

    return result[0].toBigInt();
  }

  try_virtual_price(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "virtual_price",
      "virtual_price():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin_actions_deadline(): BigInt {
    let result = super.call(
      "admin_actions_deadline",
      "admin_actions_deadline():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_admin_actions_deadline(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "admin_actions_deadline",
      "admin_actions_deadline():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _weth(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ExchangeCall extends ethereum.Call {
  get inputs(): ExchangeCall__Inputs {
    return new ExchangeCall__Inputs(this);
  }

  get outputs(): ExchangeCall__Outputs {
    return new ExchangeCall__Outputs(this);
  }
}

export class ExchangeCall__Inputs {
  _call: ExchangeCall;

  constructor(call: ExchangeCall) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get j(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dx(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get min_dy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ExchangeCall__Outputs {
  _call: ExchangeCall;

  constructor(call: ExchangeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Exchange1Call extends ethereum.Call {
  get inputs(): Exchange1Call__Inputs {
    return new Exchange1Call__Inputs(this);
  }

  get outputs(): Exchange1Call__Outputs {
    return new Exchange1Call__Outputs(this);
  }
}

export class Exchange1Call__Inputs {
  _call: Exchange1Call;

  constructor(call: Exchange1Call) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get j(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dx(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get min_dy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class Exchange1Call__Outputs {
  _call: Exchange1Call;

  constructor(call: Exchange1Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Exchange2Call extends ethereum.Call {
  get inputs(): Exchange2Call__Inputs {
    return new Exchange2Call__Inputs(this);
  }

  get outputs(): Exchange2Call__Outputs {
    return new Exchange2Call__Outputs(this);
  }
}

export class Exchange2Call__Inputs {
  _call: Exchange2Call;

  constructor(call: Exchange2Call) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get j(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dx(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get min_dy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get receiver(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class Exchange2Call__Outputs {
  _call: Exchange2Call;

  constructor(call: Exchange2Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Exchange_underlyingCall extends ethereum.Call {
  get inputs(): Exchange_underlyingCall__Inputs {
    return new Exchange_underlyingCall__Inputs(this);
  }

  get outputs(): Exchange_underlyingCall__Outputs {
    return new Exchange_underlyingCall__Outputs(this);
  }
}

export class Exchange_underlyingCall__Inputs {
  _call: Exchange_underlyingCall;

  constructor(call: Exchange_underlyingCall) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get j(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dx(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get min_dy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class Exchange_underlyingCall__Outputs {
  _call: Exchange_underlyingCall;

  constructor(call: Exchange_underlyingCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Exchange_underlying1Call extends ethereum.Call {
  get inputs(): Exchange_underlying1Call__Inputs {
    return new Exchange_underlying1Call__Inputs(this);
  }

  get outputs(): Exchange_underlying1Call__Outputs {
    return new Exchange_underlying1Call__Outputs(this);
  }
}

export class Exchange_underlying1Call__Inputs {
  _call: Exchange_underlying1Call;

  constructor(call: Exchange_underlying1Call) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get j(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dx(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get min_dy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get receiver(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class Exchange_underlying1Call__Outputs {
  _call: Exchange_underlying1Call;

  constructor(call: Exchange_underlying1Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Exchange_extendedCall extends ethereum.Call {
  get inputs(): Exchange_extendedCall__Inputs {
    return new Exchange_extendedCall__Inputs(this);
  }

  get outputs(): Exchange_extendedCall__Outputs {
    return new Exchange_extendedCall__Outputs(this);
  }
}

export class Exchange_extendedCall__Inputs {
  _call: Exchange_extendedCall;

  constructor(call: Exchange_extendedCall) {
    this._call = call;
  }

  get i(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get j(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get dx(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get min_dy(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get sender(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get receiver(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get cb(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class Exchange_extendedCall__Outputs {
  _call: Exchange_extendedCall;

  constructor(call: Exchange_extendedCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Add_liquidityCall extends ethereum.Call {
  get inputs(): Add_liquidityCall__Inputs {
    return new Add_liquidityCall__Inputs(this);
  }

  get outputs(): Add_liquidityCall__Outputs {
    return new Add_liquidityCall__Outputs(this);
  }
}

export class Add_liquidityCall__Inputs {
  _call: Add_liquidityCall;

  constructor(call: Add_liquidityCall) {
    this._call = call;
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get min_mint_amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Add_liquidityCall__Outputs {
  _call: Add_liquidityCall;

  constructor(call: Add_liquidityCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Add_liquidity1Call extends ethereum.Call {
  get inputs(): Add_liquidity1Call__Inputs {
    return new Add_liquidity1Call__Inputs(this);
  }

  get outputs(): Add_liquidity1Call__Outputs {
    return new Add_liquidity1Call__Outputs(this);
  }
}

export class Add_liquidity1Call__Inputs {
  _call: Add_liquidity1Call;

  constructor(call: Add_liquidity1Call) {
    this._call = call;
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get min_mint_amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class Add_liquidity1Call__Outputs {
  _call: Add_liquidity1Call;

  constructor(call: Add_liquidity1Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Add_liquidity2Call extends ethereum.Call {
  get inputs(): Add_liquidity2Call__Inputs {
    return new Add_liquidity2Call__Inputs(this);
  }

  get outputs(): Add_liquidity2Call__Outputs {
    return new Add_liquidity2Call__Outputs(this);
  }
}

export class Add_liquidity2Call__Inputs {
  _call: Add_liquidity2Call;

  constructor(call: Add_liquidity2Call) {
    this._call = call;
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get min_mint_amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get receiver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class Add_liquidity2Call__Outputs {
  _call: Add_liquidity2Call;

  constructor(call: Add_liquidity2Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Remove_liquidityCall extends ethereum.Call {
  get inputs(): Remove_liquidityCall__Inputs {
    return new Remove_liquidityCall__Inputs(this);
  }

  get outputs(): Remove_liquidityCall__Outputs {
    return new Remove_liquidityCall__Outputs(this);
  }
}

export class Remove_liquidityCall__Inputs {
  _call: Remove_liquidityCall;

  constructor(call: Remove_liquidityCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get min_amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class Remove_liquidityCall__Outputs {
  _call: Remove_liquidityCall;

  constructor(call: Remove_liquidityCall) {
    this._call = call;
  }
}

export class Remove_liquidity1Call extends ethereum.Call {
  get inputs(): Remove_liquidity1Call__Inputs {
    return new Remove_liquidity1Call__Inputs(this);
  }

  get outputs(): Remove_liquidity1Call__Outputs {
    return new Remove_liquidity1Call__Outputs(this);
  }
}

export class Remove_liquidity1Call__Inputs {
  _call: Remove_liquidity1Call;

  constructor(call: Remove_liquidity1Call) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get min_amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get use_eth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class Remove_liquidity1Call__Outputs {
  _call: Remove_liquidity1Call;

  constructor(call: Remove_liquidity1Call) {
    this._call = call;
  }
}

export class Remove_liquidity2Call extends ethereum.Call {
  get inputs(): Remove_liquidity2Call__Inputs {
    return new Remove_liquidity2Call__Inputs(this);
  }

  get outputs(): Remove_liquidity2Call__Outputs {
    return new Remove_liquidity2Call__Outputs(this);
  }
}

export class Remove_liquidity2Call__Inputs {
  _call: Remove_liquidity2Call;

  constructor(call: Remove_liquidity2Call) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get min_amounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get use_eth(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get receiver(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class Remove_liquidity2Call__Outputs {
  _call: Remove_liquidity2Call;

  constructor(call: Remove_liquidity2Call) {
    this._call = call;
  }
}

export class Remove_liquidity_one_coinCall extends ethereum.Call {
  get inputs(): Remove_liquidity_one_coinCall__Inputs {
    return new Remove_liquidity_one_coinCall__Inputs(this);
  }

  get outputs(): Remove_liquidity_one_coinCall__Outputs {
    return new Remove_liquidity_one_coinCall__Outputs(this);
  }
}

export class Remove_liquidity_one_coinCall__Inputs {
  _call: Remove_liquidity_one_coinCall;

  constructor(call: Remove_liquidity_one_coinCall) {
    this._call = call;
  }

  get token_amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get i(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get min_amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Remove_liquidity_one_coinCall__Outputs {
  _call: Remove_liquidity_one_coinCall;

  constructor(call: Remove_liquidity_one_coinCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Remove_liquidity_one_coin1Call extends ethereum.Call {
  get inputs(): Remove_liquidity_one_coin1Call__Inputs {
    return new Remove_liquidity_one_coin1Call__Inputs(this);
  }

  get outputs(): Remove_liquidity_one_coin1Call__Outputs {
    return new Remove_liquidity_one_coin1Call__Outputs(this);
  }
}

export class Remove_liquidity_one_coin1Call__Inputs {
  _call: Remove_liquidity_one_coin1Call;

  constructor(call: Remove_liquidity_one_coin1Call) {
    this._call = call;
  }

  get token_amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get i(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get min_amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class Remove_liquidity_one_coin1Call__Outputs {
  _call: Remove_liquidity_one_coin1Call;

  constructor(call: Remove_liquidity_one_coin1Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Remove_liquidity_one_coin2Call extends ethereum.Call {
  get inputs(): Remove_liquidity_one_coin2Call__Inputs {
    return new Remove_liquidity_one_coin2Call__Inputs(this);
  }

  get outputs(): Remove_liquidity_one_coin2Call__Outputs {
    return new Remove_liquidity_one_coin2Call__Outputs(this);
  }
}

export class Remove_liquidity_one_coin2Call__Inputs {
  _call: Remove_liquidity_one_coin2Call;

  constructor(call: Remove_liquidity_one_coin2Call) {
    this._call = call;
  }

  get token_amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get i(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get min_amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get use_eth(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get receiver(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class Remove_liquidity_one_coin2Call__Outputs {
  _call: Remove_liquidity_one_coin2Call;

  constructor(call: Remove_liquidity_one_coin2Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Claim_admin_feesCall extends ethereum.Call {
  get inputs(): Claim_admin_feesCall__Inputs {
    return new Claim_admin_feesCall__Inputs(this);
  }

  get outputs(): Claim_admin_feesCall__Outputs {
    return new Claim_admin_feesCall__Outputs(this);
  }
}

export class Claim_admin_feesCall__Inputs {
  _call: Claim_admin_feesCall;

  constructor(call: Claim_admin_feesCall) {
    this._call = call;
  }
}

export class Claim_admin_feesCall__Outputs {
  _call: Claim_admin_feesCall;

  constructor(call: Claim_admin_feesCall) {
    this._call = call;
  }
}

export class Ramp_A_gammaCall extends ethereum.Call {
  get inputs(): Ramp_A_gammaCall__Inputs {
    return new Ramp_A_gammaCall__Inputs(this);
  }

  get outputs(): Ramp_A_gammaCall__Outputs {
    return new Ramp_A_gammaCall__Outputs(this);
  }
}

export class Ramp_A_gammaCall__Inputs {
  _call: Ramp_A_gammaCall;

  constructor(call: Ramp_A_gammaCall) {
    this._call = call;
  }

  get future_A(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get future_gamma(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get future_time(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class Ramp_A_gammaCall__Outputs {
  _call: Ramp_A_gammaCall;

  constructor(call: Ramp_A_gammaCall) {
    this._call = call;
  }
}

export class Stop_ramp_A_gammaCall extends ethereum.Call {
  get inputs(): Stop_ramp_A_gammaCall__Inputs {
    return new Stop_ramp_A_gammaCall__Inputs(this);
  }

  get outputs(): Stop_ramp_A_gammaCall__Outputs {
    return new Stop_ramp_A_gammaCall__Outputs(this);
  }
}

export class Stop_ramp_A_gammaCall__Inputs {
  _call: Stop_ramp_A_gammaCall;

  constructor(call: Stop_ramp_A_gammaCall) {
    this._call = call;
  }
}

export class Stop_ramp_A_gammaCall__Outputs {
  _call: Stop_ramp_A_gammaCall;

  constructor(call: Stop_ramp_A_gammaCall) {
    this._call = call;
  }
}

export class Commit_new_parametersCall extends ethereum.Call {
  get inputs(): Commit_new_parametersCall__Inputs {
    return new Commit_new_parametersCall__Inputs(this);
  }

  get outputs(): Commit_new_parametersCall__Outputs {
    return new Commit_new_parametersCall__Outputs(this);
  }
}

export class Commit_new_parametersCall__Inputs {
  _call: Commit_new_parametersCall;

  constructor(call: Commit_new_parametersCall) {
    this._call = call;
  }

  get _new_mid_fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _new_out_fee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _new_admin_fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _new_fee_gamma(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _new_allowed_extra_profit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _new_adjustment_step(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _new_ma_half_time(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class Commit_new_parametersCall__Outputs {
  _call: Commit_new_parametersCall;

  constructor(call: Commit_new_parametersCall) {
    this._call = call;
  }
}

export class Apply_new_parametersCall extends ethereum.Call {
  get inputs(): Apply_new_parametersCall__Inputs {
    return new Apply_new_parametersCall__Inputs(this);
  }

  get outputs(): Apply_new_parametersCall__Outputs {
    return new Apply_new_parametersCall__Outputs(this);
  }
}

export class Apply_new_parametersCall__Inputs {
  _call: Apply_new_parametersCall;

  constructor(call: Apply_new_parametersCall) {
    this._call = call;
  }
}

export class Apply_new_parametersCall__Outputs {
  _call: Apply_new_parametersCall;

  constructor(call: Apply_new_parametersCall) {
    this._call = call;
  }
}

export class Revert_new_parametersCall extends ethereum.Call {
  get inputs(): Revert_new_parametersCall__Inputs {
    return new Revert_new_parametersCall__Inputs(this);
  }

  get outputs(): Revert_new_parametersCall__Outputs {
    return new Revert_new_parametersCall__Outputs(this);
  }
}

export class Revert_new_parametersCall__Inputs {
  _call: Revert_new_parametersCall;

  constructor(call: Revert_new_parametersCall) {
    this._call = call;
  }
}

export class Revert_new_parametersCall__Outputs {
  _call: Revert_new_parametersCall;

  constructor(call: Revert_new_parametersCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get A(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get gamma(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get mid_fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get out_fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get allowed_extra_profit(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get fee_gamma(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get adjustment_step(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get admin_fee(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get ma_half_time(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get initial_price(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[10].value.toAddress();
  }

  get _coins(): Array<Address> {
    return this._call.inputValues[11].value.toAddressArray();
  }

  get _precisions(): BigInt {
    return this._call.inputValues[12].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

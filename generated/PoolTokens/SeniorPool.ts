// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositMade extends ethereum.Event {
  get params(): DepositMade__Params {
    return new DepositMade__Params(this);
  }
}

export class DepositMade__Params {
  _event: DepositMade;

  constructor(event: DepositMade) {
    this._event = event;
  }

  get capitalProvider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EpochDurationChanged extends ethereum.Event {
  get params(): EpochDurationChanged__Params {
    return new EpochDurationChanged__Params(this);
  }
}

export class EpochDurationChanged__Params {
  _event: EpochDurationChanged;

  constructor(event: EpochDurationChanged) {
    this._event = event;
  }

  get newDuration(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EpochEnded extends ethereum.Event {
  get params(): EpochEnded__Params {
    return new EpochEnded__Params(this);
  }
}

export class EpochEnded__Params {
  _event: EpochEnded;

  constructor(event: EpochEnded) {
    this._event = event;
  }

  get epochId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fiduRequested(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get usdcAllocated(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fiduLiquidated(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class EpochExtended extends ethereum.Event {
  get params(): EpochExtended__Params {
    return new EpochExtended__Params(this);
  }
}

export class EpochExtended__Params {
  _event: EpochExtended;

  constructor(event: EpochExtended) {
    this._event = event;
  }

  get epochId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newEndTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get oldEndTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InterestCollected extends ethereum.Event {
  get params(): InterestCollected__Params {
    return new InterestCollected__Params(this);
  }
}

export class InterestCollected__Params {
  _event: InterestCollected;

  constructor(event: InterestCollected) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InvestmentMadeInJunior extends ethereum.Event {
  get params(): InvestmentMadeInJunior__Params {
    return new InvestmentMadeInJunior__Params(this);
  }
}

export class InvestmentMadeInJunior__Params {
  _event: InvestmentMadeInJunior;

  constructor(event: InvestmentMadeInJunior) {
    this._event = event;
  }

  get tranchedPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class InvestmentMadeInSenior extends ethereum.Event {
  get params(): InvestmentMadeInSenior__Params {
    return new InvestmentMadeInSenior__Params(this);
  }
}

export class InvestmentMadeInSenior__Params {
  _event: InvestmentMadeInSenior;

  constructor(event: InvestmentMadeInSenior) {
    this._event = event;
  }

  get tranchedPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PrincipalCollected extends ethereum.Event {
  get params(): PrincipalCollected__Params {
    return new PrincipalCollected__Params(this);
  }
}

export class PrincipalCollected__Params {
  _event: PrincipalCollected;

  constructor(event: PrincipalCollected) {
    this._event = event;
  }

  get payer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PrincipalWrittenDown extends ethereum.Event {
  get params(): PrincipalWrittenDown__Params {
    return new PrincipalWrittenDown__Params(this);
  }
}

export class PrincipalWrittenDown__Params {
  _event: PrincipalWrittenDown;

  constructor(event: PrincipalWrittenDown) {
    this._event = event;
  }

  get tranchedPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReserveFundsCollected extends ethereum.Event {
  get params(): ReserveFundsCollected__Params {
    return new ReserveFundsCollected__Params(this);
  }
}

export class ReserveFundsCollected__Params {
  _event: ReserveFundsCollected;

  constructor(event: ReserveFundsCollected) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReserveSharesCollected extends ethereum.Event {
  get params(): ReserveSharesCollected__Params {
    return new ReserveSharesCollected__Params(this);
  }
}

export class ReserveSharesCollected__Params {
  _event: ReserveSharesCollected;

  constructor(event: ReserveSharesCollected) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reserve(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawalAddedTo extends ethereum.Event {
  get params(): WithdrawalAddedTo__Params {
    return new WithdrawalAddedTo__Params(this);
  }
}

export class WithdrawalAddedTo__Params {
  _event: WithdrawalAddedTo;

  constructor(event: WithdrawalAddedTo) {
    this._event = event;
  }

  get epochId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get operator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get fiduRequested(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawalCanceled extends ethereum.Event {
  get params(): WithdrawalCanceled__Params {
    return new WithdrawalCanceled__Params(this);
  }
}

export class WithdrawalCanceled__Params {
  _event: WithdrawalCanceled;

  constructor(event: WithdrawalCanceled) {
    this._event = event;
  }

  get epochId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get operator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get fiduCanceled(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reserveFidu(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class WithdrawalMade extends ethereum.Event {
  get params(): WithdrawalMade__Params {
    return new WithdrawalMade__Params(this);
  }
}

export class WithdrawalMade__Params {
  _event: WithdrawalMade;

  constructor(event: WithdrawalMade) {
    this._event = event;
  }

  get capitalProvider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get userAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reserveAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawalRequested extends ethereum.Event {
  get params(): WithdrawalRequested__Params {
    return new WithdrawalRequested__Params(this);
  }
}

export class WithdrawalRequested__Params {
  _event: WithdrawalRequested;

  constructor(event: WithdrawalRequested) {
    this._event = event;
  }

  get epochId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get operator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get fiduRequested(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProxyImplementationUpdated extends ethereum.Event {
  get params(): ProxyImplementationUpdated__Params {
    return new ProxyImplementationUpdated__Params(this);
  }
}

export class ProxyImplementationUpdated__Params {
  _event: ProxyImplementationUpdated;

  constructor(event: ProxyImplementationUpdated) {
    this._event = event;
  }

  get previousImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SeniorPool__currentEpochResultValue0Struct extends ethereum.Tuple {
  get endsAt(): BigInt {
    return this[0].toBigInt();
  }

  get fiduRequested(): BigInt {
    return this[1].toBigInt();
  }

  get fiduLiquidated(): BigInt {
    return this[2].toBigInt();
  }

  get usdcAllocated(): BigInt {
    return this[3].toBigInt();
  }
}

export class SeniorPool__withdrawalRequestResultValue0Struct extends ethereum.Tuple {
  get epochCursor(): BigInt {
    return this[0].toBigInt();
  }

  get usdcWithdrawable(): BigInt {
    return this[1].toBigInt();
  }

  get fiduRequested(): BigInt {
    return this[2].toBigInt();
  }
}

export class SeniorPool extends ethereum.SmartContract {
  static bind(address: Address): SeniorPool {
    return new SeniorPool("SeniorPool", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  OWNER_ROLE(): Bytes {
    let result = super.call("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_OWNER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("OWNER_ROLE", "OWNER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ZAPPER_ROLE(): Bytes {
    let result = super.call("ZAPPER_ROLE", "ZAPPER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ZAPPER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ZAPPER_ROLE", "ZAPPER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  assets(): BigInt {
    let result = super.call("assets", "assets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_assets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("assets", "assets():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateWritedown(tokenId: BigInt): BigInt {
    let result = super.call(
      "calculateWritedown",
      "calculateWritedown(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_calculateWritedown(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateWritedown",
      "calculateWritedown(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cancelWithdrawalRequest(tokenId: BigInt): BigInt {
    let result = super.call(
      "cancelWithdrawalRequest",
      "cancelWithdrawalRequest(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_cancelWithdrawalRequest(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "cancelWithdrawalRequest",
      "cancelWithdrawalRequest(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimWithdrawalRequest(tokenId: BigInt): BigInt {
    let result = super.call(
      "claimWithdrawalRequest",
      "claimWithdrawalRequest(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_claimWithdrawalRequest(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "claimWithdrawalRequest",
      "claimWithdrawalRequest(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  config(): Address {
    let result = super.call("config", "config():(address)", []);

    return result[0].toAddress();
  }

  try_config(): ethereum.CallResult<Address> {
    let result = super.tryCall("config", "config():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currentEpoch(): SeniorPool__currentEpochResultValue0Struct {
    let result = super.call(
      "currentEpoch",
      "currentEpoch():((uint256,uint256,uint256,uint256))",
      []
    );

    return changetype<SeniorPool__currentEpochResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_currentEpoch(): ethereum.CallResult<
    SeniorPool__currentEpochResultValue0Struct
  > {
    let result = super.tryCall(
      "currentEpoch",
      "currentEpoch():((uint256,uint256,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<SeniorPool__currentEpochResultValue0Struct>(value[0].toTuple())
    );
  }

  deposit(amount: BigInt): BigInt {
    let result = super.call("deposit", "deposit(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBigInt();
  }

  try_deposit(amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("deposit", "deposit(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositWithPermit(
    amount: BigInt,
    deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): BigInt {
    let result = super.call(
      "depositWithPermit",
      "depositWithPermit(uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );

    return result[0].toBigInt();
  }

  try_depositWithPermit(
    amount: BigInt,
    deadline: BigInt,
    v: i32,
    r: Bytes,
    s: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositWithPermit",
      "depositWithPermit(uint256,uint256,uint8,bytes32,bytes32):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(deadline),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(v)),
        ethereum.Value.fromFixedBytes(r),
        ethereum.Value.fromFixedBytes(s)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  epochDuration(): BigInt {
    let result = super.call("epochDuration", "epochDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_epochDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "epochDuration",
      "epochDuration():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  estimateInvestment(pool: Address): BigInt {
    let result = super.call(
      "estimateInvestment",
      "estimateInvestment(address):(uint256)",
      [ethereum.Value.fromAddress(pool)]
    );

    return result[0].toBigInt();
  }

  try_estimateInvestment(pool: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateInvestment",
      "estimateInvestment(address):(uint256)",
      [ethereum.Value.fromAddress(pool)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getNumShares(usdcAmount: BigInt): BigInt {
    let result = super.call("getNumShares", "getNumShares(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(usdcAmount)
    ]);

    return result[0].toBigInt();
  }

  try_getNumShares(usdcAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumShares",
      "getNumShares(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(usdcAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  invest(pool: Address): BigInt {
    let result = super.call("invest", "invest(address):(uint256)", [
      ethereum.Value.fromAddress(pool)
    ]);

    return result[0].toBigInt();
  }

  try_invest(pool: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("invest", "invest(address):(uint256)", [
      ethereum.Value.fromAddress(pool)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isAdmin(): boolean {
    let result = super.call("isAdmin", "isAdmin():(bool)", []);

    return result[0].toBoolean();
  }

  try_isAdmin(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  requestWithdrawal(fiduAmount: BigInt): BigInt {
    let result = super.call(
      "requestWithdrawal",
      "requestWithdrawal(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fiduAmount)]
    );

    return result[0].toBigInt();
  }

  try_requestWithdrawal(fiduAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "requestWithdrawal",
      "requestWithdrawal(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fiduAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sharePrice(): BigInt {
    let result = super.call("sharePrice", "sharePrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_sharePrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("sharePrice", "sharePrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sharesOutstanding(): BigInt {
    let result = super.call(
      "sharesOutstanding",
      "sharesOutstanding():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sharesOutstanding(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sharesOutstanding",
      "sharesOutstanding():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalLoansOutstanding(): BigInt {
    let result = super.call(
      "totalLoansOutstanding",
      "totalLoansOutstanding():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalLoansOutstanding(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalLoansOutstanding",
      "totalLoansOutstanding():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalWritedowns(): BigInt {
    let result = super.call(
      "totalWritedowns",
      "totalWritedowns():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalWritedowns(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalWritedowns",
      "totalWritedowns():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  usdcAvailable(): BigInt {
    let result = super.call("usdcAvailable", "usdcAvailable():(uint256)", []);

    return result[0].toBigInt();
  }

  try_usdcAvailable(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "usdcAvailable",
      "usdcAvailable():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdraw(usdcAmount: BigInt): BigInt {
    let result = super.call("withdraw", "withdraw(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(usdcAmount)
    ]);

    return result[0].toBigInt();
  }

  try_withdraw(usdcAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("withdraw", "withdraw(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(usdcAmount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawInFidu(fiduAmount: BigInt): BigInt {
    let result = super.call(
      "withdrawInFidu",
      "withdrawInFidu(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fiduAmount)]
    );

    return result[0].toBigInt();
  }

  try_withdrawInFidu(fiduAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawInFidu",
      "withdrawInFidu(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(fiduAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawalRequest(
    tokenId: BigInt
  ): SeniorPool__withdrawalRequestResultValue0Struct {
    let result = super.call(
      "withdrawalRequest",
      "withdrawalRequest(uint256):((uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return changetype<SeniorPool__withdrawalRequestResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_withdrawalRequest(
    tokenId: BigInt
  ): ethereum.CallResult<SeniorPool__withdrawalRequestResultValue0Struct> {
    let result = super.tryCall(
      "withdrawalRequest",
      "withdrawalRequest(uint256):((uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<SeniorPool__withdrawalRequestResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  writedownsByPoolToken(param0: BigInt): BigInt {
    let result = super.call(
      "writedownsByPoolToken",
      "writedownsByPoolToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_writedownsByPoolToken(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "writedownsByPoolToken",
      "writedownsByPoolToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(id: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(id)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(id: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class __BaseUpgradeablePausable__initCall extends ethereum.Call {
  get inputs(): __BaseUpgradeablePausable__initCall__Inputs {
    return new __BaseUpgradeablePausable__initCall__Inputs(this);
  }

  get outputs(): __BaseUpgradeablePausable__initCall__Outputs {
    return new __BaseUpgradeablePausable__initCall__Outputs(this);
  }
}

export class __BaseUpgradeablePausable__initCall__Inputs {
  _call: __BaseUpgradeablePausable__initCall;

  constructor(call: __BaseUpgradeablePausable__initCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class __BaseUpgradeablePausable__initCall__Outputs {
  _call: __BaseUpgradeablePausable__initCall;

  constructor(call: __BaseUpgradeablePausable__initCall) {
    this._call = call;
  }
}

export class __PauserPausable__initCall extends ethereum.Call {
  get inputs(): __PauserPausable__initCall__Inputs {
    return new __PauserPausable__initCall__Inputs(this);
  }

  get outputs(): __PauserPausable__initCall__Outputs {
    return new __PauserPausable__initCall__Outputs(this);
  }
}

export class __PauserPausable__initCall__Inputs {
  _call: __PauserPausable__initCall;

  constructor(call: __PauserPausable__initCall) {
    this._call = call;
  }
}

export class __PauserPausable__initCall__Outputs {
  _call: __PauserPausable__initCall;

  constructor(call: __PauserPausable__initCall) {
    this._call = call;
  }
}

export class AddToWithdrawalRequestCall extends ethereum.Call {
  get inputs(): AddToWithdrawalRequestCall__Inputs {
    return new AddToWithdrawalRequestCall__Inputs(this);
  }

  get outputs(): AddToWithdrawalRequestCall__Outputs {
    return new AddToWithdrawalRequestCall__Outputs(this);
  }
}

export class AddToWithdrawalRequestCall__Inputs {
  _call: AddToWithdrawalRequestCall;

  constructor(call: AddToWithdrawalRequestCall) {
    this._call = call;
  }

  get fiduAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddToWithdrawalRequestCall__Outputs {
  _call: AddToWithdrawalRequestCall;

  constructor(call: AddToWithdrawalRequestCall) {
    this._call = call;
  }
}

export class CancelWithdrawalRequestCall extends ethereum.Call {
  get inputs(): CancelWithdrawalRequestCall__Inputs {
    return new CancelWithdrawalRequestCall__Inputs(this);
  }

  get outputs(): CancelWithdrawalRequestCall__Outputs {
    return new CancelWithdrawalRequestCall__Outputs(this);
  }
}

export class CancelWithdrawalRequestCall__Inputs {
  _call: CancelWithdrawalRequestCall;

  constructor(call: CancelWithdrawalRequestCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelWithdrawalRequestCall__Outputs {
  _call: CancelWithdrawalRequestCall;

  constructor(call: CancelWithdrawalRequestCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ClaimWithdrawalRequestCall extends ethereum.Call {
  get inputs(): ClaimWithdrawalRequestCall__Inputs {
    return new ClaimWithdrawalRequestCall__Inputs(this);
  }

  get outputs(): ClaimWithdrawalRequestCall__Outputs {
    return new ClaimWithdrawalRequestCall__Outputs(this);
  }
}

export class ClaimWithdrawalRequestCall__Inputs {
  _call: ClaimWithdrawalRequestCall;

  constructor(call: ClaimWithdrawalRequestCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimWithdrawalRequestCall__Outputs {
  _call: ClaimWithdrawalRequestCall;

  constructor(call: ClaimWithdrawalRequestCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get depositShares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DepositWithPermitCall extends ethereum.Call {
  get inputs(): DepositWithPermitCall__Inputs {
    return new DepositWithPermitCall__Inputs(this);
  }

  get outputs(): DepositWithPermitCall__Outputs {
    return new DepositWithPermitCall__Outputs(this);
  }
}

export class DepositWithPermitCall__Inputs {
  _call: DepositWithPermitCall;

  constructor(call: DepositWithPermitCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class DepositWithPermitCall__Outputs {
  _call: DepositWithPermitCall;

  constructor(call: DepositWithPermitCall) {
    this._call = call;
  }

  get depositShares(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _config(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeEpochsCall extends ethereum.Call {
  get inputs(): InitializeEpochsCall__Inputs {
    return new InitializeEpochsCall__Inputs(this);
  }

  get outputs(): InitializeEpochsCall__Outputs {
    return new InitializeEpochsCall__Outputs(this);
  }
}

export class InitializeEpochsCall__Inputs {
  _call: InitializeEpochsCall;

  constructor(call: InitializeEpochsCall) {
    this._call = call;
  }
}

export class InitializeEpochsCall__Outputs {
  _call: InitializeEpochsCall;

  constructor(call: InitializeEpochsCall) {
    this._call = call;
  }
}

export class InvestCall extends ethereum.Call {
  get inputs(): InvestCall__Inputs {
    return new InvestCall__Inputs(this);
  }

  get outputs(): InvestCall__Outputs {
    return new InvestCall__Outputs(this);
  }
}

export class InvestCall__Inputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InvestCall__Outputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RequestWithdrawalCall extends ethereum.Call {
  get inputs(): RequestWithdrawalCall__Inputs {
    return new RequestWithdrawalCall__Inputs(this);
  }

  get outputs(): RequestWithdrawalCall__Outputs {
    return new RequestWithdrawalCall__Outputs(this);
  }
}

export class RequestWithdrawalCall__Inputs {
  _call: RequestWithdrawalCall;

  constructor(call: RequestWithdrawalCall) {
    this._call = call;
  }

  get fiduAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestWithdrawalCall__Outputs {
  _call: RequestWithdrawalCall;

  constructor(call: RequestWithdrawalCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetEpochDurationCall extends ethereum.Call {
  get inputs(): SetEpochDurationCall__Inputs {
    return new SetEpochDurationCall__Inputs(this);
  }

  get outputs(): SetEpochDurationCall__Outputs {
    return new SetEpochDurationCall__Outputs(this);
  }
}

export class SetEpochDurationCall__Inputs {
  _call: SetEpochDurationCall;

  constructor(call: SetEpochDurationCall) {
    this._call = call;
  }

  get newEpochDuration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEpochDurationCall__Outputs {
  _call: SetEpochDurationCall;

  constructor(call: SetEpochDurationCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get usdcAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawInFiduCall extends ethereum.Call {
  get inputs(): WithdrawInFiduCall__Inputs {
    return new WithdrawInFiduCall__Inputs(this);
  }

  get outputs(): WithdrawInFiduCall__Outputs {
    return new WithdrawInFiduCall__Outputs(this);
  }
}

export class WithdrawInFiduCall__Inputs {
  _call: WithdrawInFiduCall;

  constructor(call: WithdrawInFiduCall) {
    this._call = call;
  }

  get fiduAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawInFiduCall__Outputs {
  _call: WithdrawInFiduCall;

  constructor(call: WithdrawInFiduCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WritedownCall extends ethereum.Call {
  get inputs(): WritedownCall__Inputs {
    return new WritedownCall__Inputs(this);
  }

  get outputs(): WritedownCall__Outputs {
    return new WritedownCall__Outputs(this);
  }
}

export class WritedownCall__Inputs {
  _call: WritedownCall;

  constructor(call: WritedownCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WritedownCall__Outputs {
  _call: WritedownCall;

  constructor(call: WritedownCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get implementationAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ownerAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
